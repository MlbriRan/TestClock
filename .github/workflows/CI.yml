# This is a Continuous Integration workflow #
# The trigger is pushes and PR              #

name: CI

on: 
  push: 
    branches: 
      - master
    paths-ignore:
      - 'docs/**'

  pull_request:
    branches: 
      - master
    paths-ignore:
      - 'docs/**'

jobs:
  workflow_info:
    name: Information about the workflow run
    env:
      GITHUB_CONTEXT: ${{ toJson(github) }}
    runs-on: [self-hosted, windows]
    steps:
      - name: Show Information
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: |
          write-host "This workflow run is triggered by ${{ github.event_name }} ."
          write-host "Commits message: ${{ github.event.commits.message }}"
          write-host "***********************************************************************************"
          write-host "$env:GITHUB_CONTEXT"
          write-host "==================================================================================="
          write-host "Runner info:"
          write-host "$env:RUNNER_CONTEXT"
          write-host "***********************************************************************************"

  build:
    if: github.event_name == 'push' && (contains(toJson(event.commits), '***NO_CI***') || contains(toJson(event.commits), '[ci skip]') || contains(toJson(event.commits), '[skip ci]'))
    name: Build
    env:
      UPDATE_PR_BRANCH: false
    runs-on: [self-hosted, windows]
    steps:
      - name: Show information about the runner
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: |
          echo "********************************************************************************************"
          echo "Runner info:"
          echo "$env:RUNNER_CONTEXT"
          echo "********************************************************************************************"

      - name: Update PR Branch
        if: github.event_name == 'pull_request' && env.UPDATE_PR_BRANCH == true
        uses: actions/github-script@0.2.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          shell: bash
          script: |
            await github.pulls.updateBranch({owner: context.issue.owner, repo: context.issue.repo, pull_number: context.issue.number})

      - name: Checkout
        if: success()
        uses: actions/checkout@v1

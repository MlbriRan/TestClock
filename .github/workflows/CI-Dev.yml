name: CI_Dev

on:    
  push:
    branches:
      - Dev
    paths-ignore:
      - 'docs/**'


env: 
  MSG: Hello

jobs:
  build:
    runs-on: windows-latest
#    if: env.MSG == 'Hello'
    steps:
    - name: String matches
      if: env.MSG == 'Hello'
      run: echo String matches Hello

  test_docker:
    name: Test Docker
    runs-on: ubuntu-latest
    steps:
      - name: Show Docker version Pre
        run: |
          echo "**************************************************"
          docker-compose version
          echo "**************************************************"
          docker --version
          echo "**************************************************"
      - name: Update Docker version
        run: |
          sudo sh -c "wget -qO- https://get.docker.io/gpg | apt-key add -"
          sudo sh -c "echo deb http://get.docker.io/ubuntu docker main\ > /etc/apt/sources.list.d/docker.list"
          sudo aptitude update
          sudo aptitude install lxc-docker
      - name: Show Docker version New
        run: |
          echo "**************************************************"
          docker-compose version
          echo "**************************************************"
          docker --version
          echo "**************************************************"

  test_matrix:
    name: Test matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        TARGET: [x86_64-apple-darwin, armv7-unknown-linux-musleabihf, x86_64-unknown-linux-musl]
        exclude: 
        - os: macos-latest
          TARGET: armv7-unknown-linux-musleabihf
        - os: macos-latest
          TARGET: x86_64-unknown-linux-musl
        - os: ubuntu-latest
          TARGET: x86_64-apple-darwin
    steps:
    - name: Building [ ${{ matrix.os }}, ${{ matrix.TARGET }} ]
      run: echo "Building [ ${{ matrix.os }}, ${{ matrix.TARGET }} ]"

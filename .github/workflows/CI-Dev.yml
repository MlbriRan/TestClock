name: CI_Dev

on:    
  push:
    branches:
      - Dev
    paths-ignore:
      - 'docs/**'

env:
  MSG: Hello
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages

jobs:
  test_workspace:
    name: Test workspace
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    steps:
      - name: Show workspace
        run: |
          echo "*******************************************************************************************************"
          echo "Currently working directory is: $PWD"
          echo "*******************************************************************************************************"
          mkdir -p $env:NUGET_PACKAGES  # create directory if it does not exists
          echo "Change working directiory:"
          cd $env:NUGET_PACKAGES
          echo "Currently working directory is: $PWD"
          echo "*******************************************************************************************************"
        shell: pwsh

  test_env_var:
    name: Test environment variable
    needs: [test_workspace]
    runs-on: windows-latest
    steps:
    - name: Print environment variable with cmd 
      if: env.MSG == 'Hello'
      run: echo "String matches %MSG%"
      shell: cmd

    - name: Print environment variable with powershell 
      run: echo "String matches $env:MSG"
      shell: powershell

    - name: Print environment variable with bash 
      run: echo "String matches $MSG"
      shell: bash

    - name: Print environment variable with pwsh 
      run: echo "String matches ${env:MSG}"  # Use $env:MSG also can work
      shell: pwsh

    - name: Print environment variable with python
      run: |
        import os
        print("String matches", os.environ['MSG'])
      shell: python

  test_matrix:
    name: Test matrix
    needs: [test_env_var]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        TARGET: [x86_64-apple-darwin, armv7-unknown-linux-musleabihf, x86_64-unknown-linux-musl]
        exclude: 
        - os: macos-latest
          TARGET: armv7-unknown-linux-musleabihf
        - os: macos-latest
          TARGET: x86_64-unknown-linux-musl
        - os: ubuntu-latest
          TARGET: x86_64-apple-darwin
    steps:
    - name: Building [ ${{ matrix.os }}, ${{ matrix.TARGET }} ]
      run: echo "Building [ ${{ matrix.os }}, ${{ matrix.TARGET }} ]"

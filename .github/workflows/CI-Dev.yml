name: CI_Dev

on:    
  push:
    branches:
      - Dev
    paths-ignore:
      - 'docs/**'


env: 
  MSG: Hello

jobs:
  test_python:
    name: Test Python
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.x"

      - name: Checkout
        if: success()
        uses: actions/checkout@v1

      - name: Install dependencies
        if: success()
        run: |
          sudo apt-get install -y python3-h5py python3-netcdf4 python3-lxml

      - name: Install package
        if: success()
        run: |
          pip install --upgrade pip
          pip install .[all]

  test_env_var:
    needs: [test_python]
    name: Test environment variable
    runs-on: windows-latest
    steps:
    - name: Print environment variable with cmd 
      if: env.MSG == 'Hello'
      run: echo "String matches %MSG%"
      shell: cmd

    - name: Print environment variable with powershell 
      run: echo "String matches $env:MSG"
      shell: powershell

    - name: Print environment variable with bash 
      run: echo "String matches $MSG"
      shell: bash

    - name: Print environment variable with pwsh 
      run: echo "String matches ${env:MSG}"  # Use $env:MSG also can work
      shell: pwsh

    - name: Print environment variable with python
      run: |
        import os
        print("String matches", os.environ['MSG'])
      shell: python

  test_ninja:
    needs: [test_python]
    name: Test Ninja
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        version: [1.8.2, 1.9.0]
    steps:
      - name: Install ninja-build tool
        uses: seanmiddleditch/gha-setup-ninja@master
        with:
          version: ${{ matrix.version }}

      - name: Check version of ninja-build tool
        run: |
          echo "******************************************"
          echo "Ninja version:"
          ninja --version
          echo "******************************************"

  test_matrix:
    needs: [test_python]
    name: Test matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        TARGET: [x86_64-apple-darwin, armv7-unknown-linux-musleabihf, x86_64-unknown-linux-musl]
        exclude: 
        - os: macos-latest
          TARGET: armv7-unknown-linux-musleabihf
        - os: macos-latest
          TARGET: x86_64-unknown-linux-musl
        - os: ubuntu-latest
          TARGET: x86_64-apple-darwin
    steps:
    - name: Building [ ${{ matrix.os }}, ${{ matrix.TARGET }} ]
      run: echo "Building [ ${{ matrix.os }}, ${{ matrix.TARGET }} ]"
